/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dietadvisor;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class registeredPatient extends javax.swing.JFrame {
    

    /**
     * Creates new form registeredPatient
     */
    public registeredPatient() {
        initComponents();
        jTextFieldUserNamep.setText(patient.jTextFieldUserName.getText());
        jRadioButtonA.setVisible(false);
         jRadioButtonB.setVisible(false);

        
        ButtonGroup bg=new ButtonGroup();
        bg.add(jRadioButtonHiv);
        bg.add(jRadioButtonDiabetes);
        bg.add(jRadioButtonA);
        bg.add(jRadioButtonB);
        bg.add(jRadioButtonOther);
        bg.add(jRadioButtonAll);
        
        ButtonGroup chekb=new ButtonGroup();
        chekb.add(jCheckBox1); 
        chekb.add(jCheckBoxNotTaken);
        chekb.add(jCheckBoxPartial);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelTBMI = new javax.swing.JLabel();
        jLabelheight = new javax.swing.JLabel();
        jTextFieldHeight = new javax.swing.JTextField();
        jLabelTitle2 = new javax.swing.JLabel();
        jLabelBMI = new javax.swing.JLabel();
        jLabelWeight = new javax.swing.JLabel();
        jLabelsupper = new javax.swing.JLabel();
        jButtonCheck = new javax.swing.JButton();
        jLabelLunch = new javax.swing.JLabel();
        jLabelBreakfast = new javax.swing.JLabel();
        jLabelName = new javax.swing.JLabel();
        jTextFieldWeight = new javax.swing.JTextField();
        JtextFieldBMI = new javax.swing.JTextField();
        jLabelKg = new javax.swing.JLabel();
        jLabelM = new javax.swing.JLabel();
        jLabelExit = new javax.swing.JLabel();
        jTextFieldCalories = new javax.swing.JTextField();
        jLabelheight1 = new javax.swing.JLabel();
        jLabelDisease = new javax.swing.JLabel();
        jRadioButtonHiv = new javax.swing.JRadioButton();
        jRadioButtonOther = new javax.swing.JRadioButton();
        jRadioButtonDiabetes = new javax.swing.JRadioButton();
        jRadioButtonA = new javax.swing.JRadioButton();
        jRadioButtonB = new javax.swing.JRadioButton();
        jRadioButtonAll = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaOthers = new javax.swing.JTextArea();
        jTextFieldUserNamep = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableSupper = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableBreakfast = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableLunch = new javax.swing.JTable();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBoxNotTaken = new javax.swing.JCheckBox();
        jCheckBoxPartial = new javax.swing.JCheckBox();
        jCheckBoxNotTakenLunch = new javax.swing.JCheckBox();
        jCheckBoxTakenLunch = new javax.swing.JCheckBox();
        jCheckBoxPartialLunch = new javax.swing.JCheckBox();
        jCheckBoxNotTaken2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBoxPartial2 = new javax.swing.JCheckBox();
        jLabelTitle3 = new javax.swing.JLabel();
        jTextFieldCarbohydrates = new javax.swing.JTextField();
        jLabelTitle4 = new javax.swing.JLabel();
        jTextFieldFruitVeg = new javax.swing.JTextField();
        jLabelTitle5 = new javax.swing.JLabel();
        jTextFieldProtein = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(400, 800));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTBMI.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        jLabelTBMI.setText("BMI");
        jPanel1.add(jLabelTBMI, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 11, 44, -1));

        jLabelheight.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        jLabelheight.setText("HEIGHT");
        jPanel1.add(jLabelheight, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 46, 89, -1));

        jTextFieldHeight.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldHeight.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        jPanel1.add(jTextFieldHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 43, 130, -1));

        jLabelTitle2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabelTitle2.setText("RECOMMENDED : CALORIES");
        jPanel1.add(jLabelTitle2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 198, 20));

        jLabelBMI.setFont(new java.awt.Font("Tekton Pro", 0, 12)); // NOI18N
        jLabelBMI.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel1.add(jLabelBMI, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, 215, 29));

        jLabelWeight.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        jLabelWeight.setText("WEIGHT");
        jPanel1.add(jLabelWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 14, 89, -1));

        jLabelsupper.setFont(new java.awt.Font("Tekton Pro", 0, 15)); // NOI18N
        jLabelsupper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/supper.png"))); // NOI18N
        jLabelsupper.setText("SUPPER");
        jPanel1.add(jLabelsupper, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 300, 128, 60));

        jButtonCheck.setBackground(new java.awt.Color(0, 0, 0));
        jButtonCheck.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        jButtonCheck.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCheck.setText("CHECK");
        jButtonCheck.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 4, true));
        jButtonCheck.setContentAreaFilled(false);
        jButtonCheck.setOpaque(true);
        jButtonCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCheckMouseClicked(evt);
            }
        });
        jPanel1.add(jButtonCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 140, 90, -1));

        jLabelLunch.setFont(new java.awt.Font("Tekton Pro", 0, 15)); // NOI18N
        jLabelLunch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/lunch.png"))); // NOI18N
        jLabelLunch.setText("LUNCH");
        jPanel1.add(jLabelLunch, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 300, 120, 60));

        jLabelBreakfast.setFont(new java.awt.Font("Tekton Pro", 0, 15)); // NOI18N
        jLabelBreakfast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/coffee-cup.png"))); // NOI18N
        jLabelBreakfast.setText("BREAKFAST");
        jLabelBreakfast.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelBreakfastMouseClicked(evt);
            }
        });
        jPanel1.add(jLabelBreakfast, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, -1, 70));

        jLabelName.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jPanel1.add(jLabelName, new org.netbeans.lib.awtextra.AbsoluteConstraints(813, 453, 276, 22));

        jTextFieldWeight.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldWeight.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        jTextFieldWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldWeightActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 11, 130, -1));

        JtextFieldBMI.setEditable(false);
        JtextFieldBMI.setBackground(new java.awt.Color(204, 255, 204));
        JtextFieldBMI.setFont(new java.awt.Font("Tekton Pro", 0, 12)); // NOI18N
        JtextFieldBMI.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(JtextFieldBMI, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 50, 314, 27));

        jLabelKg.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabelKg.setText("Kg(s)");
        jPanel1.add(jLabelKg, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, -1, -1));

        jLabelM.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabelM.setText("Meters");
        jPanel1.add(jLabelM, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, -1, -1));

        jLabelExit.setBackground(new java.awt.Color(255, 255, 255));
        jLabelExit.setFont(new java.awt.Font("Tekton Pro", 3, 18)); // NOI18N
        jLabelExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png"))); // NOI18N
        jLabelExit.setText("BACK");
        jLabelExit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.black, null, null));
        jLabelExit.setOpaque(true);
        jLabelExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelExitMouseClicked(evt);
            }
        });
        jPanel1.add(jLabelExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 10, 99, 40));

        jTextFieldCalories.setEditable(false);
        jTextFieldCalories.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextFieldCalories.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jTextFieldCalories, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 110, 40));

        jLabelheight1.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        jLabelheight1.setText("HEIGHT");
        jPanel1.add(jLabelheight1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 46, 89, -1));

        jLabelDisease.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        jLabelDisease.setText("DISEASE");
        jPanel1.add(jLabelDisease, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        jRadioButtonHiv.setText("HIV/AIDS");
        jRadioButtonHiv.setOpaque(false);
        jPanel1.add(jRadioButtonHiv, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, -1, -1));

        jRadioButtonOther.setText("OTHERS");
        jRadioButtonOther.setOpaque(false);
        jRadioButtonOther.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButtonOtherMouseClicked(evt);
            }
        });
        jPanel1.add(jRadioButtonOther, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, -1, -1));

        jRadioButtonDiabetes.setText("DIABETES");
        jRadioButtonDiabetes.setOpaque(false);
        jRadioButtonDiabetes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButtonDiabetesMouseClicked(evt);
            }
        });
        jRadioButtonDiabetes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDiabetesActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButtonDiabetes, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, -1, -1));

        jRadioButtonA.setText("TYPE A");
        jRadioButtonA.setOpaque(false);
        jPanel1.add(jRadioButtonA, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 80, 70, -1));

        jRadioButtonB.setText("TYPE B");
        jRadioButtonB.setOpaque(false);
        jPanel1.add(jRadioButtonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, -1, -1));

        jRadioButtonAll.setText("HIV/AIDS&DIABETES");
        jRadioButtonAll.setOpaque(false);
        jPanel1.add(jRadioButtonAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 80, -1, -1));

        jTextAreaOthers.setColumns(20);
        jTextAreaOthers.setRows(5);
        jTextAreaOthers.setEnabled(false);
        jTextAreaOthers.setFocusable(false);
        jTextAreaOthers.setRequestFocusEnabled(false);
        jScrollPane1.setViewportView(jTextAreaOthers);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 110, 341, 50));

        jTextFieldUserNamep.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextFieldUserNamep.setOpaque(false);
        jPanel1.add(jTextFieldUserNamep, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 280, 40));

        jLabel1.setBackground(new java.awt.Color(204, 255, 204));
        jLabel1.setOpaque(true);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 4, 870, 190));

        jTableSupper.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SUPPER"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableSupper);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 370, 250, 90));

        jTableBreakfast.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BREAKFAST"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableBreakfast);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 270, 90));

        jTableLunch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LUNCH"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTableLunch);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 370, 250, 90));

        jCheckBox1.setText("Taken");
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1MouseClicked(evt);
            }
        });
        jPanel1.add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, -1, -1));

        jCheckBoxNotTaken.setText("Not Taken");
        jCheckBoxNotTaken.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxNotTakenMouseClicked(evt);
            }
        });
        jPanel1.add(jCheckBoxNotTaken, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, -1, -1));

        jCheckBoxPartial.setText("Partly Taken");
        jCheckBoxPartial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxPartialMouseClicked(evt);
            }
        });
        jPanel1.add(jCheckBoxPartial, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, -1, -1));

        jCheckBoxNotTakenLunch.setText("Not Taken");
        jCheckBoxNotTakenLunch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxNotTakenLunchMouseClicked(evt);
            }
        });
        jPanel1.add(jCheckBoxNotTakenLunch, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 490, -1, -1));

        jCheckBoxTakenLunch.setText("Taken");
        jCheckBoxTakenLunch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxTakenLunchMouseClicked(evt);
            }
        });
        jPanel1.add(jCheckBoxTakenLunch, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 470, -1, -1));

        jCheckBoxPartialLunch.setText("Partly Taken");
        jCheckBoxPartialLunch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxPartialLunchMouseClicked(evt);
            }
        });
        jPanel1.add(jCheckBoxPartialLunch, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 510, -1, -1));

        jCheckBoxNotTaken2.setText("Not Taken");
        jPanel1.add(jCheckBoxNotTaken2, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 490, -1, -1));

        jCheckBox3.setText("Taken");
        jCheckBox3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox3MouseClicked(evt);
            }
        });
        jPanel1.add(jCheckBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 470, -1, -1));

        jCheckBoxPartial2.setText("Partly Taken");
        jPanel1.add(jCheckBoxPartial2, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 510, -1, -1));

        jLabelTitle3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabelTitle3.setText("CARBOHYDRATES");
        jPanel1.add(jLabelTitle3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 200, 198, 20));

        jTextFieldCarbohydrates.setEditable(false);
        jTextFieldCarbohydrates.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextFieldCarbohydrates.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jTextFieldCarbohydrates, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, 140, 40));

        jLabelTitle4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabelTitle4.setText("FRUITS & VEGETABLES");
        jPanel1.add(jLabelTitle4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 200, 198, 20));

        jTextFieldFruitVeg.setEditable(false);
        jTextFieldFruitVeg.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextFieldFruitVeg.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jTextFieldFruitVeg, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 220, 150, 40));

        jLabelTitle5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabelTitle5.setText("PROTEINS");
        jPanel1.add(jLabelTitle5, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 200, 150, 20));

        jTextFieldProtein.setEditable(false);
        jTextFieldProtein.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextFieldProtein.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextFieldProtein.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldProteinActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldProtein, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 220, 150, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 879, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCheckMouseClicked
        //calculate BMI
        jRadioButtonHiv.setVisible(false);
        jRadioButtonDiabetes.setVisible(false);
        jRadioButtonA.setVisible(false);
        jRadioButtonB.setVisible(false);
        jRadioButtonOther.setVisible(false);
        jRadioButtonAll.setVisible(false);
        jTextAreaOthers.setVisible(false);
        jLabelDisease.setVisible(false);
//calculate BMI
        String W=jTextFieldWeight.getText();
        String H=jTextFieldHeight.getText();

        float weight=Float.parseFloat(W);
        float height=Float.parseFloat(H);

        float BMI;

        BMI = weight / (height*height);
        jLabelBMI.setText(""+BMI+"");
        if(BMI<18.5){
            JtextFieldBMI.setText( "YOU ARE UNDERWEIGHT!");
        }
        else if (BMI>=18.5 && BMI <=25){
            JtextFieldBMI.setText("YOUR WEIGHT IS NORMAL");
        }
        else if(BMI>25 && BMI <=30){
            JtextFieldBMI.setText("YOU ARE OVERWEIGHT!");
        }
        else {
            JtextFieldBMI.setText("YOU ARE OBESE!");
        }
        
        //end of calculation
        //CALCULATE CALORIES
        float x;
        x=(float) (weight/0.45359237);
        jTextFieldCalories.setText(String.valueOf(x));
        Connection con;
        PreparedStatement ps;
        //BREAKFAST
        String Disease=null;
        if(jRadioButtonHiv.isSelected()){
            Disease="hiv";

jTextFieldCarbohydrates.setText("6-5 Serving/day");
jTextFieldFruitVeg.setText("3 Cups/day");
jTextFieldProtein.setText("100-150 grams/day");
        }
        else if(jRadioButtonDiabetes.isSelected()){
            Disease="Diabetes";
        }
        else if(jRadioButtonA.isSelected()){
            Disease="diabetes_a";
        }
        else if(jRadioButtonB.isSelected()){
            Disease="diabetes_b";
        }
        else if(jRadioButtonOther.isSelected()){
            Disease=("Other");
        }
        else if(jRadioButtonAll.isSelected()){
            Disease="jTextAreaOthers";
        }
        else{
            JOptionPane.showMessageDialog(null,"PLEASE SELECT ONE DISEASE");
        }
jTextFieldCarbohydrates.setText("6-5 Serving/day");
jTextFieldFruitVeg.setText("3 Cups/day");
jTextFieldProtein.setText("100-150 grams/day");
///

//      try{
//        
//      con=connection.getConnection();
//            String gender="Female";
//      ps=con.prepareStatement("Select Gender from patient where Name= '"+jTextFieldUserNamep.getText()+"'"+" and Gender="+ gender);
//      ResultSet rst=ps.executeQuery();
//      if(rst.next()){
//      jTextFieldProtein.setText("80-100 grams/day");
//      }
//      }catch(Exception ex){
//      System.out.println("ERR: "+ex);
//      }

            //////
            String brkfast=null;
if(jCheckBox1.isSelected()){
                         //progress report 
            
   

                     //
        
            
            }
 else if(jCheckBoxPartial.isSelected()){
            brkfast="Partially Taken";
         
 
 
 }
        
        con=connection.getConnection();
        try {
            ps=con.prepareStatement("SELECT * FROM "+ Disease);
            ResultSet rst=ps.executeQuery();
            DefaultTableModel model=(DefaultTableModel) jTableBreakfast.getModel();
            Object[] row;
            while(rst.next()){
                row=new Object[1];
                row[0]=rst.getString(2);
               // row[1]=jTextFieldCalories.getText();
                model.addRow(row);

            }
        }
        catch (Exception ex) {
            System.out.println(ex);
        }

        try {
            ps=con.prepareStatement("SELECT * FROM "+ Disease);
            ResultSet rst=ps.executeQuery();
            DefaultTableModel model=(DefaultTableModel) jTableLunch.getModel();
            Object[] row;
            while(rst.next()){
                row=new Object[1];
                row[0]=rst.getString(3);

                model.addRow(row);

            }
        }
        catch (Exception ex) {
           System.out.println(ex);
        }

        try {
            ps=con.prepareStatement("SELECT * FROM "+ Disease);
            ResultSet rst=ps.executeQuery();
            DefaultTableModel model=(DefaultTableModel) jTableSupper.getModel();
            Object[] row;
            while(rst.next()){
                row=new Object[1];
                row[0]=rst.getString(4);

                model.addRow(row);

            }
        }
        catch (Exception ex) {
            System.out.println("err "+ex);
        }
    }//GEN-LAST:event_jButtonCheckMouseClicked

    private void jLabelBreakfastMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBreakfastMouseClicked

        Connection con;
        PreparedStatement ps;

        try{
            String Disease=null;
            if(jRadioButtonHiv.isSelected()){
                Disease="hiv";
            }
            else if(jRadioButtonDiabetes.isSelected()){
                Disease="Diabetes";
            }
            else if(jRadioButtonA.isSelected()){
                Disease="Diabetes_A";
            }
            else if(jRadioButtonB.isSelected()){
                Disease="Diabetes_B";
            }
            else if(jRadioButtonOther.isSelected()){
                Disease="Other";
            }
            else if(jRadioButtonAll.isSelected()){
                Disease="jTextAreaOthers";
            }

      
//                        DateTimeFormatter dtf=DateTimeFormatter.ofPattern("yyyy/MM/dd");
//                        LocalDateTime now=LocalDateTime.now();
//                        String date=dtf.format(now);
//                        con=connection.getConnection();
            //
            //            ps=con.prepareStatement("SELECT * FROM "+ Disease);
            //            ResultSet rst=ps.executeQuery();
            //
            //
            //            if(rst.next()){
                //                DefaultTableModel model=(DefaultTableModel) jTableBreakfast.getModel();
                //
                //                model.addRow(new Object[]{rst.getString(1),rst.getString(2)});
                //            }

        }catch(Exception ex){
            System.out.println("err: "+ex);
        }
    }//GEN-LAST:event_jLabelBreakfastMouseClicked

    private void jTextFieldWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldWeightActionPerformed

    }//GEN-LAST:event_jTextFieldWeightActionPerformed

    private void jLabelExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelExitMouseClicked
        index index=new index();
        index.main(null);
        this.dispose();
    }//GEN-LAST:event_jLabelExitMouseClicked

    private void jRadioButtonOtherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonOtherMouseClicked

        if(jRadioButtonB.isSelected()){
            jTextAreaOthers.setVisible(false);
        }
        else if(jRadioButtonHiv.isSelected()){
            jTextAreaOthers.setVisible(false);
        }
        else if(jRadioButtonDiabetes.isSelected()){
            jTextAreaOthers.setVisible(false);
        }
        else if(jRadioButtonAll.isSelected()){
            jTextAreaOthers.setVisible(false);
        }
        else if(jRadioButtonA.isSelected()){
            jTextAreaOthers.setVisible(false);
        }
        else if(jRadioButtonOther.isSelected()){
            jTextAreaOthers.setVisible(true);
        }
    }//GEN-LAST:event_jRadioButtonOtherMouseClicked

    private void jRadioButtonDiabetesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonDiabetesMouseClicked
        if(jRadioButtonDiabetes.isSelected()){
            jRadioButtonDiabetes.setVisible(false);
            jRadioButtonA.setVisible(true);
            jRadioButtonB.setVisible(true);
        }
    }//GEN-LAST:event_jRadioButtonDiabetesMouseClicked

    private void jRadioButtonDiabetesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDiabetesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonDiabetesActionPerformed

    private void jCheckBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1MouseClicked
        DateTimeFormatter dtf=DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDateTime now=LocalDateTime.now();
        String date=dtf.format(now);
        
        Connection con;
    PreparedStatement ps;
    
        try{
        
        con=connection.getConnection();
        
        ps=con.prepareStatement("Select * from progress where UniqueNo= '"+ jTextFieldUserNamep.getText()+"'");
        ResultSet rst1=ps.executeQuery();
        if(rst1.next()){
            String brk="Taken";
        ps=con.prepareStatement("INSERT INTO progress(BreakFast) VALUES(?)");
        ps.setString(1,brk);
        int i=ps.executeUpdate();
        if(i>0){
        jCheckBoxNotTaken.setVisible(false);
        jCheckBox1.setVisible(false);
        jCheckBoxPartial.setVisible(false);
        }
        
        }
        else{
        ps=con.prepareStatement("INSERT INTO progress (Date,UniqueNo,BMI,BreakFast) VALUES(?,?,?,?)");
        ps.setString(1,date);
        ps.setString(2,jTextFieldUserNamep.getText());
        ps.setString(3,jLabelBMI.getText());
        ps.setString(4,"Taken");
        int i=ps.executeUpdate();
        if(i>0){
        jCheckBoxNotTaken.setVisible(false);
        jCheckBox1.setVisible(false);
        jCheckBoxPartial.setVisible(false);
        }
        }
        }catch(Exception ex){
        System.out.println("Error : "+ex);
        }
    }//GEN-LAST:event_jCheckBox1MouseClicked

    private void jCheckBoxTakenLunchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxTakenLunchMouseClicked
        DateTimeFormatter dtf=DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDateTime now=LocalDateTime.now();
        String date=dtf.format(now);
        
        Connection con;
        PreparedStatement ps;
        try{
        con=connection.getConnection();
        String lunch="Taken";
                ps=con.prepareStatement("Select * from progress where UniqueNo= '"+jTextFieldUserNamep.getText()+"'");
        ResultSet rst1=ps.executeQuery();
        if(rst1.next()){
        ps=con.prepareStatement("INSERT INTO progress(Lunch) VALUES(?)");
        ps.setString(1,lunch);
        }
        else{
        ps=con.prepareStatement("INSERT INTO progress (Date,UniqueNo,BMI,BreakFast,Lunch) VALUES(?,?,?,?,?)");
        ps.setString(1,date);
        ps.setString(2,jTextFieldUserNamep.getText());
        ps.setString(3,jLabelBMI.getText());
        ps.setString(4,"Not Taken");
        ps.setString(5, lunch);
        int i=ps.executeUpdate();
        if(i>0){
        jCheckBoxTakenLunch.setVisible(false);
        jCheckBoxNotTakenLunch.setVisible(false);
        jCheckBoxPartialLunch.setVisible(false);
        }
            
        }
       
        
  }catch(Exception ex){
        System.out.println("Error : "+ex);
        }
    }//GEN-LAST:event_jCheckBoxTakenLunchMouseClicked

    private void jCheckBox3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox3MouseClicked

    }//GEN-LAST:event_jCheckBox3MouseClicked

    private void jCheckBoxNotTakenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxNotTakenMouseClicked
        DateTimeFormatter dtf=DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDateTime now=LocalDateTime.now();
        String date=dtf.format(now);
        
        Connection con;
        PreparedStatement ps;
        con=connection.getConnection();
        try{
                ps=con.prepareStatement("Select * from progress where UniqueNo= '"+jTextFieldUserNamep.getText()+"'");
        ResultSet rst1=ps.executeQuery();
        if(rst1.next()){
            String brk="Not Taken";
        ps=con.prepareStatement("INSERT INTO progress(BreakFast) VALUES(?)");
        ps.setString(1,brk);
        int i=ps.executeUpdate();
        if(i>0){
        jCheckBoxNotTaken.setVisible(false);
        jCheckBox1.setVisible(false);
        jCheckBoxPartial.setVisible(false);
        }
        else{
       
        ps=con.prepareStatement("INSERT INTO progress (Date,UniqueNo,BMI,BreakFast) VALUES(?,?,?)");
        ps.setString(1,date);
        ps.setString(2,jTextFieldUserNamep.getText());
        ps.setString(3,jLabelBMI.getText());
        ps.setString(4,"Not Taken");
        int k=ps.executeUpdate();
        if(k>0){
        jCheckBoxNotTaken.setVisible(false);
        jCheckBox1.setVisible(false);
        jCheckBoxPartial.setVisible(false);
        }
  }
        }
        }catch(Exception ex){
        System.out.println("Error : "+ex);
        }
    }//GEN-LAST:event_jCheckBoxNotTakenMouseClicked

    private void jCheckBoxPartialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxPartialMouseClicked
        DateTimeFormatter dtf=DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDateTime now=LocalDateTime.now();
        String date=dtf.format(now);
        
        Connection con;
        PreparedStatement ps;
        try{
        con=connection.getConnection();
                ps=con.prepareStatement("Select * from progress where uniqueNo= '"+jTextFieldUserNamep.getText()+"'");
        ResultSet rst1=ps.executeQuery();
        if(rst1.next()){
            String brk="Partly Taken";
        ps=con.prepareStatement("INSERT INTO progress(BreakFast) VALUES(?)");
        ps.setString(1,brk);
        int i=ps.executeUpdate();
        if(i>0){
        jCheckBoxNotTaken.setVisible(false);
        jCheckBox1.setVisible(false);
        jCheckBoxPartial.setVisible(false);
        }
        else{
        ps=con.prepareStatement("INSERT INTO progress (Date,uniqueNo,BMI,BreakFast) VALUES(?,?,?,?)");
        ps.setString(1,date);
        ps.setString(2,jTextFieldUserNamep.getText());
         ps.setString(3,jLabelBMI.getText());
        ps.setString(4,"Partly Taken");
        int o=ps.executeUpdate();
        if(o>0){
        jCheckBoxNotTaken.setVisible(false);
        jCheckBox1.setVisible(false);
        jCheckBoxPartial.setVisible(false);
        }
        }
        }
        }catch(Exception ex){
        System.out.println("Error : "+ex);
        }
    }//GEN-LAST:event_jCheckBoxPartialMouseClicked

    private void jTextFieldProteinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldProteinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldProteinActionPerformed

    private void jCheckBoxNotTakenLunchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxNotTakenLunchMouseClicked
                DateTimeFormatter dtf=DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDateTime now=LocalDateTime.now();
        String date=dtf.format(now);
        
        Connection con;
        PreparedStatement ps;
        try{
        con=connection.getConnection();
        String lunch="Taken";
                ps=con.prepareStatement("Select * from progress where uniqueNo= '"+jTextFieldUserNamep.getText()+"'");
        ResultSet rst1=ps.executeQuery();
        if(rst1.next()){
        ps=con.prepareStatement("UPDATE progress set Lunch= "+ lunch+" WHERE uniqueNo= '"+jTextFieldUserNamep.getText()+"'");
        }
        else{
        ps=con.prepareStatement("INSERT INTO progress (Date,uniqueNo,BMI,BreakFast,Lunch) VALUES(?,?,?,?,?)");
        ps.setString(1,date);
        ps.setString(2,jTextFieldUserNamep.getText());
        ps.setString(3,jLabelBMI.getText());
        ps.setString(4,"Not Taken");
        ps.setString(5, lunch);
        int i=ps.executeUpdate();
        if(i>0){
        jCheckBoxTakenLunch.setVisible(false);
        jCheckBoxNotTakenLunch.setVisible(false);
        jCheckBoxPartialLunch.setVisible(false);
        }
            
        }
       
        
  }catch(Exception ex){
        System.out.println("Error : "+ex);
        }
    }//GEN-LAST:event_jCheckBoxNotTakenLunchMouseClicked

    private void jCheckBoxPartialLunchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxPartialLunchMouseClicked
                DateTimeFormatter dtf=DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDateTime now=LocalDateTime.now();
        String date=dtf.format(now);
        
        Connection con;
        PreparedStatement ps;
        try{
        con=connection.getConnection();
        String lunch="Taken";
                ps=con.prepareStatement("Select * from progress where uniqueNo= '"+jTextFieldUserNamep.getText()+"'");
        ResultSet rst1=ps.executeQuery();
        if(rst1.next()){
        ps=con.prepareStatement("UPDATE progress set Lunch= "+ lunch+" WHERE uniqueNo= '"+jTextFieldUserNamep.getText()+"'");
        }
        else{
        ps=con.prepareStatement("INSERT INTO progress (Date,uniqueNo,BMI,BreakFast,Lunch) VALUES(?,?,?,?,?)");
        ps.setString(1,date);
        ps.setString(2,jTextFieldUserNamep.getText());
        ps.setString(3,jLabelBMI.getText());
        ps.setString(4,"Partially Taken");
        ps.setString(5, lunch);
        int i=ps.executeUpdate();
        if(i>0){
        jCheckBoxTakenLunch.setVisible(false);
        jCheckBoxNotTakenLunch.setVisible(false);
        jCheckBoxPartialLunch.setVisible(false);
        }
            
        }
       
        
  }catch(Exception ex){
        System.out.println("Error : "+ex);
        }
    }//GEN-LAST:event_jCheckBoxPartialLunchMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registeredPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registeredPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registeredPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registeredPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registeredPatient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JtextFieldBMI;
    private javax.swing.JButton jButtonCheck;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBoxNotTaken;
    private javax.swing.JCheckBox jCheckBoxNotTaken2;
    private javax.swing.JCheckBox jCheckBoxNotTakenLunch;
    private javax.swing.JCheckBox jCheckBoxPartial;
    private javax.swing.JCheckBox jCheckBoxPartial2;
    private javax.swing.JCheckBox jCheckBoxPartialLunch;
    private javax.swing.JCheckBox jCheckBoxTakenLunch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelBMI;
    private javax.swing.JLabel jLabelBreakfast;
    private javax.swing.JLabel jLabelDisease;
    private javax.swing.JLabel jLabelExit;
    private javax.swing.JLabel jLabelKg;
    private javax.swing.JLabel jLabelLunch;
    private javax.swing.JLabel jLabelM;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelTBMI;
    private javax.swing.JLabel jLabelTitle2;
    private javax.swing.JLabel jLabelTitle3;
    private javax.swing.JLabel jLabelTitle4;
    private javax.swing.JLabel jLabelTitle5;
    private javax.swing.JLabel jLabelWeight;
    private javax.swing.JLabel jLabelheight;
    private javax.swing.JLabel jLabelheight1;
    private javax.swing.JLabel jLabelsupper;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButtonA;
    private javax.swing.JRadioButton jRadioButtonAll;
    private javax.swing.JRadioButton jRadioButtonB;
    private javax.swing.JRadioButton jRadioButtonDiabetes;
    private javax.swing.JRadioButton jRadioButtonHiv;
    private javax.swing.JRadioButton jRadioButtonOther;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTableBreakfast;
    private javax.swing.JTable jTableLunch;
    private javax.swing.JTable jTableSupper;
    private javax.swing.JTextArea jTextAreaOthers;
    private javax.swing.JTextField jTextFieldCalories;
    private javax.swing.JTextField jTextFieldCarbohydrates;
    private javax.swing.JTextField jTextFieldFruitVeg;
    private javax.swing.JTextField jTextFieldHeight;
    private javax.swing.JTextField jTextFieldProtein;
    private javax.swing.JTextField jTextFieldUserNamep;
    private javax.swing.JTextField jTextFieldWeight;
    // End of variables declaration//GEN-END:variables
}
